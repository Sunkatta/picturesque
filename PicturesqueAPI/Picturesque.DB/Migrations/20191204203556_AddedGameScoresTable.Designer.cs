// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Picturesque.DB;

namespace Picturesque.DB.Migrations
{
    [DbContext(typeof(PicturesqueDbContext))]
    [Migration("20191204203556_AddedGameScoresTable")]
    partial class AddedGameScoresTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Picturesque.Domain.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Picturesque.Domain.GameScore", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId");

                    b.Property<int>("Difficulty");

                    b.Property<int>("Score");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("GameScores");
                });

            modelBuilder.Entity("Picturesque.Domain.Picture", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Img2Base64");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Picturesque.Domain.PicturesCategories", b =>
                {
                    b.Property<string>("CategoryId");

                    b.Property<string>("PictureId");

                    b.HasKey("CategoryId", "PictureId");

                    b.HasIndex("PictureId");

                    b.ToTable("PicturesCategories");
                });

            modelBuilder.Entity("Picturesque.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsBlocked");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Picturesque.Domain.PicturesCategories", b =>
                {
                    b.HasOne("Picturesque.Domain.Category", "Category")
                        .WithMany("Pictures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Picturesque.Domain.Picture", "Picture")
                        .WithMany("Categories")
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
