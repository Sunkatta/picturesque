@page  "/login"
@using Picturesque.Models.Constants;
@inject HttpClient client;
@inject TokenAuthenticationStateProvider authStateProvider;
@inject NavigationManager UriHelper;

<div class="login-register-holder">
    <div class="container">
        <MatH3 Class="text-center">Login</MatH3>
        <div class="form-holder">
            <EditForm Model="@loginInputModel" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />

                <p class="text-danger text-center">@((MarkupString)errorMessage)</p>

                <div class="form-group">
                    <MatTextField Class="w-100"
                                  Required="true"
                                  Label="Email"
                                  Outlined="true"
                                  @bind-Value="loginInputModel.Email">
                    </MatTextField>
                    <ValidationMessage For="@(() => loginInputModel.Email)"></ValidationMessage>
                </div>
                <div class="form-group">
                    <MatTextField Class="w-100"
                                  Type="password"
                                  Required="true"
                                  Label="Password"
                                  Outlined="true"
                                  Icon="lock_outline"
                                  IconTrailing="true"
                                  @bind-Value="loginInputModel.Password">
                    </MatTextField>
                    <ValidationMessage For="@(() => loginInputModel.Password)"></ValidationMessage>
                </div>
                <div class="row form-group">
                    <div class="col-md-6">
                        <NavLink class="ml-md-auto" href="Account/ForgotPassword">
                            I forgot my password
                        </NavLink>
                    </div>
                    <div class="col-md-6 text-right">
                        <NavLink class="ml-md-auto" href="register">
                            Create an account
                        </NavLink>
                    </div>
                </div>
                <div class="text-center">
                    <MatButton type="submit" Class="w-100" Outlined="true">Login</MatButton>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code  {
    LoginInputModel loginInputModel = new LoginInputModel();
    string token;
    string errorMessage;

    protected async Task HandleLogin()
    {
        try
        {
            token = await client.PostJsonAsync<string>(ApiConstants.ApiUrl + "Account/Login", loginInputModel);

            if (token != null)
            {
                await authStateProvider.SetTokenAsync(token);
                UriHelper.NavigateTo("startgame");
            }
        }
        catch (Exception ex)
        {
            if (ex.Message.Contains("403"))
            {
                errorMessage = "Your account has been blocked.";
            }

            if (ex.Message.Contains("400"))
            {
                errorMessage = $"We found an account with this email but it has not been confirmed yet. Click <a href=\"Account/ResendEmail\">here</a> to resend a confirmation email to <b>{loginInputModel.Email}</b>.";
            }

            if (ex.Message.Contains("401"))
            {
                errorMessage = "We could not find an account matching this email/password.";
            }

            StateHasChanged();
        }

    }
}